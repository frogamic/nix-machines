#! /usr/bin/env bash

set -o pipefail
set -o nounset
set -o errexit

if [[ "$#" != "2" ]] || ! [[ "$1" =~ (prev|next) && "$2" =~ (sink|source) ]]; then
	echo "Usage: $(basename "$0") [prev|next] [sink|source]"
	exit 1
fi
# get array of devices excluding monitors, active is marked by *
IFS=$'\n' devices=(
	$(pacmd "list-${2}s" \
		| grep -E '(index|monitor_of):' \
		| tr '\n' '\f' \
		| sed -E 's/([^\f]*index:[[:space:]]*[[:digit:]]*)[[:space:]]*\f([[:space:]]*(monitor_of[^\f]*)\f)?/\1\3\n/g' \
		| grep -v "monitor_of"
	)
)

[[ ${#devices[@]} -lt 1 ]] && echo "No ${2}s" && echo "none" && exit 0

# find the entry with *, it's the current sink/source
for (( i=0; i<${#devices[@]}; i++ )); do
	if [[ "${devices[i]}" =~ ^[[:space:]]*\* ]]; then
		break
	fi
done

# determine whether to increment or decrement
[[ "$1" == "next" ]] && operator="+" || operator="-"
let "i = i ${operator} 1" || true

# wrap to array bounds
[[ $i -lt 0 ]] && let "i = ${#devices[@]} - 1" || true
[[ $i -ge ${#devices[@]} ]] && let "i = 0" || true

newsink="${devices[$i]}"

pactl "set-default-${2}" "${newsink#*index:[[:space:]]}"

pacmd "list-${2}s" | grep -E '(index:|alsa\.(card_)?name)' | tr -s '\n[:space:]' ' ' | sed -E 's/.*\*\s*index:[^"]*"([^"]*)"[^"]*"([^"]*)".*/\1\n\2\n/'
